.post {
	h1 {
		font-size: var(--size-step-3-4);
		line-height: var(--leading-tight);

		@media (--md-n-above) {
			line-height: var(--leading-flat);
		}
	}

	h2,
	h3 {
		line-height: var(--leading-snug);

		a[href^='#'] {
			margin-inline-start: 0.5ch;
			font-family: var(--font-monospace);
		}

		&:target {
			scroll-margin-block: 1lh;
		}
	}

	h2 {
		font-size: var(--size-step-1);
	}

	h3 {
		font-size: var(--size-step-0);
	}

	pre {
		padding: var(--space-xs) var(--space-s);
		border: var(--border-thickness-1) solid transparent;
		border-radius: var(--border-radius-1);
		outline: var(--border-thickness-1) solid var(--color-border-pre);
		tab-size: 2;
		-webkit-font-smoothing: antialiased;
		cursor: auto;

		&:focus-visible {
			--focus-ring-offset: var(--space-4xs);
			outline: var(--focus-ring);
		}
	}

	code {
		font-family: var(--font-monospace);
		font-size: 0.875em;
		letter-spacing: -0.025em;
	}

	:not(pre) > code {
		padding: 0 var(--space-3xs);
		border-radius: var(--border-radius-1);
		background-color: var(--color-bg-3);
		outline: var(--border-thickness-1) solid var(--color-border-code);
		-webkit-box-decoration-break: clone;
		box-decoration-break: clone;
	}
}

.summary,
.pubdate {
	--flow-space: var(--space-xs);
}

.summary {
	text-wrap: pretty;

	@media (--md-n-above) {
		text-wrap: balance;
	}
}

.post-featured-img {
	margin-block-start: calc(-1 * var(--space-2xs-xs));

	&:before {
		content: '';
		position: absolute;
		inset-block-start: 0;
		inset-inline-start: 0;
		block-size: var(--space-3xl);
		inline-size: 100%;
		background: var(--color-bg-inverted-1);
		z-index: -1;
	}

	img {
		outline: var(--border-thickness-1) solid var(--color-border-1);
		border-radius: var(--border-radius-1);
	}

	+ * {
		--region-start-space: var(--space-l);
	}
}

.post .hero-inner,
.post-body {
	display: grid;
	grid-template-columns:
		minmax(0, var(--measure))
		minmax(0, 1fr) minmax(0, 1fr);
}

.post .hero-inner > * {
	grid-column: 1/4;
}

.post-body > * {
	grid-column: 1/2;
}

/* TODO: Remove temporary workaround
This workaround addresses a Safari bug that rendered the first letter in a serif font
The following @supports rule targets Chrome only
https://github.com/argyleink/open-props/blob/main/src/props.supports.css */
/* @supports (-webkit-app-region: inherit) and (not (container-type: none)) {
	.post-body > p:first-child:first-letter {
		-webkit-initial-letter: 2;
		initial-letter: 2;
		margin-inline-end: 0.5em;
		font-weight: var(--font-medium);
		color: var(--color-text-2);
	}
} */

.post-body > p:has(img) {
	min-inline-size: calc(100% + (2 * var(--page-gutter)));
	margin-inline-start: calc(-1 * var(--page-gutter));

	@media (--sm-n-above) {
		min-inline-size: unset;
		margin-inline-start: unset;
	}
}

.post-body img {
	margin-inline: auto;
	outline: var(--border-thickness-1) solid var(--color-border-1);
	border-radius: var(--border-radius-conditional-1);

	@media (--sm-n-above) {
		margin-inline: unset;
	}
}

.post-footer {
	max-inline-size: var(--measure);

	> * {
		--flow-space: var(--space-2xs);
	}

	&:has([open]) > * {
		--flow-space: var(--space-s);
	}
}

.reply-methods {
	--gutter: 0.5ch;

	svg {
		block-size: 1em;
		inline-size: auto;
	}

	a {
		display: inline-flex;
		gap: var(--space-3xs);
		align-items: center;
		padding: var(--space-3xs);

		&:focus-visible {
			outline-offset: calc(-1 / 2 * var(--space-3xs));
		}
	}
}
