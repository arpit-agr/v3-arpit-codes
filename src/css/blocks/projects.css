.project-showcase-wrapper {
	display: grid;
	grid-template-columns:
		[fullbleed-start] minmax(var(--page-gutter), 1fr)
		[content-start]
		min(
			var(--wrapper-max-width, calc(80rem - (2 * var(--page-gutter)))),
			calc(100vw - (2 * var(--page-gutter)))
		)
		[content-end]
		minmax(var(--page-gutter), 1fr) [fullbleed-end];
}

.project-showcase {
	grid-column: fullbleed;
	display: grid;
	grid-template-columns: inherit;
	overflow-x: scroll;
	overscroll-behavior-x: contain;
	scroll-snap-type: x mandatory;
	scrollbar-width: none;
}

.project-list {
	grid-column: content;
	display: flex;
	align-items: center;
	gap: var(--page-gutter);
}

.project-item {
	position: relative;
	max-inline-size: unset;
	scroll-snap-align: center;

	&:last-child {
		padding-inline-end: calc(2 * var(--page-gutter));
	}

	picture {
		display: block;
		transition: scale var(--transition-movement);
	}

	img {
		min-inline-size: 73vmin;
		object-fit: contain;
	}
}

.project-link:after {
	content: '';
	position: absolute;
	inset: 0;
	z-index: 1;
}

.project-link:is(:hover, :focus-visible) + picture {
	scale: 0.985;
}

.project-item:focus-within {
	outline: var(--border-thickness-2) solid currentColor;
	outline-color: var(--color-brand);
	outline-offset: calc(-1 * var(--border-thickness-2));
	border-radius: var(--border-radius-1);
}

.project-showcase-controls {
	--gutter: var(--space-xs);
	--cluster-horizontal-alignment: end;

	button {
		padding: 0.25em 0.375em;
		display: inline-grid;
		place-items: center;
		aspect-ratio: 1;

		opacity: 0.42;
		cursor: not-allowed;
	}

	svg {
		block-size: 1.25rlh;
		inline-size: auto;
	}

	path {
		stroke: currentColor;
		stroke-width: 2.5px;
	}
}

:where(.has-js) .project-showcase-controls button:not(:disabled) {
	opacity: 1;
	cursor: pointer;
}
