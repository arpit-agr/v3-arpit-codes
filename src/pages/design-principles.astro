---
import Layout from '../layouts/Layout.astro';
import {findMatchingItem} from '../utils/findMatchingItem.js';
import pageData from '../data/pages.json';
import HeroSection from '../components/HeroSection.astro';
import {getCollection} from 'astro:content';

const pageInfo = findMatchingItem(Astro.url.pathname, pageData);
const pageTitle = pageInfo.title;
const pageDesc = pageInfo.description;
const allDesignPrinciples = await getCollection(
	'designPrinciples',
	data => data
);
---

<Layout title={pageTitle} description={pageDesc}>
	<main class="content-page" id="main" tabindex="-1">
		<HeroSection>
			<h1>{pageTitle}</h1>
			<p class="text-balance flow-space-xs">{pageDesc}</p>
		</HeroSection>
		<article class="flow region wrapper">
			<dl class="flow flow-space-l" role="list">
				{
					allDesignPrinciples.map(async entry => {
						const {Content} = await entry.render();
						const origin = entry.data.origin;
						const authorData = entry.data.author;

						return (
							<div class="content-entry">
								<dt>
									<a
										class="heading-4 text-color-2 text-pretty block"
										href={entry.data.url}
									>
										{entry.data.title}
									</a>
								</dt>
								<dd class="flow">
									<Content />
									{(!!origin || !!authorData) && (
										<cite class="inline-block small-text text-balance">
											― <span class="visually-hidden">Formulated by</span>
											{!!authorData &&
												authorData.map((item, index) => {
													if (index + 1 < authorData.length) {
														return `${item}, `;
													} else {
														return `${item}`;
													}
												})}
											{!!origin && !!authorData && ' in'}
											{!!origin && `'${origin}'`}
										</cite>
									)}
								</dd>
							</div>
						);
					})
				}
			</dl>
		</article>
	</main>
</Layout>

<style>
	.content-entry:before {
		content: '▲';
		content: '▲' / '';
	}
</style>
